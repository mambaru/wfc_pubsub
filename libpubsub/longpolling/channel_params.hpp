#pragma once

#include <message_queue/types.hpp>
#include <string>
#include <deque>

namespace wfc{ namespace pubsub{

struct channel_params
{
  std::string channel;
  /**
   * @brief минимальный размер канала подписки.
   *
   * Если поле limit входящего сообщения меньше min_size, то limit устанавливается min_size.
   * Влияет на хранение сообщений в подписке, пока получатель не заберет их.
   * Для comet'a limit должен быть >0, иначе сообщения пришедшие между ответом сервера и
   * последующим вызовом subscribe будут пропадать
   */
  size_t min_size = 1;

  /**
   * @brief максимальный размер канала
   *
   *  Ограничивает размер канала подписки для нужд клиента. Например, поле limit сообщения
   *  может быть равным 100, что означает что в канале могут находиться до 100 сообщений,
   *  но клиенту нужны не более 10 последний сообщений, тогда max_size = 10
   */
  size_t max_size = 100;

  /**
   * @brief Мнинимальное значение курсора
   *
   * Сообщение с меньшим значением будут игнорироваться. Клиент его указывает при открытии
   * канала, чтобы не получать дубликаты или не актуальные сообщения, например, при повторном открытии канала.
   * Он узнает это значение от последнего сообщения перед закрытием канала или из внешних источников
   * (например при генерации web-страницы).
   *
   * Минимальное значение курсора = 1, 0 - значение курсора игнорируются
   */
  cursor_t cursor = 0;

  typedef std::vector<channel_params> channel_list_t;
};

}}


